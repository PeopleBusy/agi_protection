<?php

namespace Proxies\__CG__\AgiBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Agent extends \AgiBundle\Entity\Agent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'id', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'nom', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'prenom', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'telephone', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'typeContrat', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'dateEmbauche', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'etat', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'contrats', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'vacations', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'operations'];
        }

        return ['__isInitialized__', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'id', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'nom', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'prenom', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'telephone', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'typeContrat', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'dateEmbauche', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'etat', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'contrats', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'vacations', '' . "\0" . 'AgiBundle\\Entity\\Agent' . "\0" . 'operations'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Agent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone($telephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeContrat($typeContrat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeContrat', [$typeContrat]);

        return parent::setTypeContrat($typeContrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeContrat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeContrat', []);

        return parent::getTypeContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEmbauche($dateEmbauche)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEmbauche', [$dateEmbauche]);

        return parent::setDateEmbauche($dateEmbauche);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEmbauche()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEmbauche', []);

        return parent::getDateEmbauche();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function addContrat(\AgiBundle\Entity\ContratAgent $contrat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContrat', [$contrat]);

        return parent::addContrat($contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContrat(\AgiBundle\Entity\ContratAgent $contrat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContrat', [$contrat]);

        return parent::removeContrat($contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getContrats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContrats', []);

        return parent::getContrats();
    }

    /**
     * {@inheritDoc}
     */
    public function addVacation(\AgiBundle\Entity\Vacation $vacation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVacation', [$vacation]);

        return parent::addVacation($vacation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVacation(\AgiBundle\Entity\Vacation $vacation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVacation', [$vacation]);

        return parent::removeVacation($vacation);
    }

    /**
     * {@inheritDoc}
     */
    public function getVacations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVacations', []);

        return parent::getVacations();
    }

    /**
     * {@inheritDoc}
     */
    public function addOperation(\AgiBundle\Entity\Operation $operation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOperation', [$operation]);

        return parent::addOperation($operation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOperation(\AgiBundle\Entity\Operation $operation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOperation', [$operation]);

        return parent::removeOperation($operation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperations', []);

        return parent::getOperations();
    }

}
